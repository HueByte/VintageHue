name: 'Setup .NET Environment'
description: 'Sets up .NET SDK with caching for VintageHue mod development'
inputs:
  dotnet-version:
    description: '.NET version to install'
    required: false
    default: '8.0.x'
  cache-key-suffix:
    description: 'Additional suffix for cache key'
    required: false
    default: ''
outputs:
  dotnet-version:
    description: 'The installed .NET version'
    value: ${{ steps.setup.outputs.dotnet-version }}
  cache-hit:
    description: 'Whether cache was hit'
    value: ${{ steps.cache.outputs.cache-hit }}

runs:
  using: 'composite'
  steps:
    - name: Setup .NET
      id: setup
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: Cache NuGet packages
      id: cache
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ inputs.cache-key-suffix }}-${{ hashFiles('**/packages.lock.json', '**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-${{ inputs.cache-key-suffix }}-
          ${{ runner.os }}-nuget-

    - name: Set environment variables
      shell: bash
      run: |
        echo "DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1" >> $GITHUB_ENV
        echo "DOTNET_NOLOGO=1" >> $GITHUB_ENV

    - name: Verify .NET installation
      shell: bash
      run: |
        echo "✅ .NET SDK installed: $(dotnet --version)"
        echo "📁 NuGet cache location: ~/.nuget/packages"
        if [ "${{ steps.cache.outputs.cache-hit }}" == "true" ]; then
          echo "🚀 NuGet packages restored from cache"
        else
          echo "📦 NuGet packages will be downloaded fresh"
        fi